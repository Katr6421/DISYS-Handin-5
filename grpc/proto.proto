//protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative grpc/proto.proto

syntax = "proto3";

package simpleGuide;

option go_package = "grpc/proto";

service Auction {
  rpc Bid(BidAmount) returns (ConfirmationOfBid);
  rpc Result(RequestStatus) returns (AuctionStatus);
  rpc UpdateBackup(AuctionUpdate) returns (ConfirmationOfUpdate);
  rpc Heartbeat(SendHeartbeat) returns (ResponseToHeartbeat);
}

message BidAmount {
  int32 ClientId = 1;
  int32 Bid = 2;
  //int32 LamportTimestamp = 3;
}

message ConfirmationOfBid {
  int32 ServerId = 1; 
  string ConfirmationMsg = 2;
  //int32 LamportTimestamp = 3; //måske?
}

message RequestStatus {
  int32 ClientId = 1;
  //int32 LamportTimestamp = 2;
  string msg = 2;
}

message AuctionStatus {
  int32 ServerId = 1;
  //int32 LamportTimestamp = 2; //måske?
  string StatusMsg = 2;
}

message SendHeartbeat {
  int32 ServerId = 1;
}

message ResponseToHeartbeat {
  int32 Ack = 1;
  int32 ServerId = 2;
}

message AuctionUpdate{
  int32 ServerId = 1; //leader server
  int32 HighestBid = 2; 
  int32 HiggestBidderId = 3; 
}

message ConfirmationOfUpdate{
  int32 ServerId = 1; //Responding backup server
}

